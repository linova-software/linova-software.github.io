"use strict";(self.webpackChunkadssp=self.webpackChunkadssp||[]).push([[695],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return h}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=o.createContext({}),l=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=l(e.components);return o.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(n),h=r,f=d["".concat(p,".").concat(h)]||d[h]||c[h]||i;return n?o.createElement(f,a(a({ref:t},u),{},{components:n})):o.createElement(f,a({ref:t},u))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:r,a[1]=s;for(var l=2;l<i;l++)a[l]=n[l];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2007:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return p},default:function(){return h},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return c}});var o=n(7462),r=n(3366),i=(n(7294),n(3905)),a=["components"],s={sidebar_position:3,title:"ADSSP on Unix"},p=void 0,l={unversionedId:"for-developers/adssp-on-unix",id:"for-developers/adssp-on-unix",title:"ADSSP on Unix",description:"Currently, we do not support running the software on Unix systems and strongy advise against it.",source:"@site/docs/03-for-developers/adssp-on-unix.md",sourceDirName:"03-for-developers",slug:"/for-developers/adssp-on-unix",permalink:"/adssp/docs/for-developers/adssp-on-unix",draft:!1,editUrl:"https://github.com/linova-software/adssp/tree/master/docs/docs/03-for-developers/adssp-on-unix.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"ADSSP on Unix"},sidebar:"docsSidebar",previous:{title:"Building a production version",permalink:"/adssp/docs/for-developers/creating-your-own-build"}},u={},c=[{value:"Why we do not support the software on Unix",id:"why-we-do-not-support-the-software-on-unix",level:2},{value:"How to run the software on Unix anyway",id:"how-to-run-the-software-on-unix-anyway",level:2}],d={toc:c};function h(e){var t=e.components,n=(0,r.Z)(e,a);return(0,i.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("admonition",{type:"warning"},(0,i.kt)("p",{parentName:"admonition"},"Currently, ",(0,i.kt)("strong",{parentName:"p"},"we do not support")," running the software on Unix systems and strongy advise against it.")),(0,i.kt)("h2",{id:"why-we-do-not-support-the-software-on-unix"},"Why we do not support the software on Unix"),(0,i.kt)("p",null,"There are several reasons for this decision:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"We have ",(0,i.kt)("strong",{parentName:"li"},"not tested")," it, and we do not plan to have a proper setup for testing it. Since the software changes things in a very central part of many companies' IT infrastructure - authentication - we consider it safety-critical and thus will not provide you with an official version which has not been tested."),(0,i.kt)("li",{parentName:"ul"},"We could not identify a use case where anyone operates an Active Directory, but cannot deploy this software on a Windows host. Although you may have the case that you operate only a single Windows host in your entire network - the one running the Active Directory - and otherwise only Unix systems, you can still ",(0,i.kt)("strong",{parentName:"li"},"run this software on the Windows Server with the Active Directory")," on it."),(0,i.kt)("li",{parentName:"ul"},"Although Unix hosts can join an Active Directory as a computer, there can easily be a ",(0,i.kt)("strong",{parentName:"li"},"collision")," that renders the otherwise working setup dysfunctional: If you install ",(0,i.kt)("strong",{parentName:"li"},"OpenSSH on a domain controller"),", then it exposes the service user for OpenSSH to the Active Directory. If you also install ",(0,i.kt)("strong",{parentName:"li"},"openssh-server")," on e.g. a ",(0,i.kt)("strong",{parentName:"li"},"Linux")," host, then there also - by default - exists a user openssh. Resolving this conflict can be quite challenging - and in the meantime, the ",(0,i.kt)("strong",{parentName:"li"},"ADSSP will not work")," the same way as if it was installed on a Windows host (there, the local user and the directory user for OpenSSH are separated correctly).")),(0,i.kt)("h2",{id:"how-to-run-the-software-on-unix-anyway"},"How to run the software on Unix anyway"),(0,i.kt)("p",null,"As a starting point, you will need the same setup as described in ",(0,i.kt)("a",{parentName:"p",href:"/adssp/docs/for-developers/getting-started"},"Getting Started"),"."),(0,i.kt)("p",null,"Adapt the ",(0,i.kt)("inlineCode",{parentName:"p"},"TargetFramework")," in the ",(0,i.kt)("inlineCode",{parentName:"p"},"Linova.ActiveDirectory.SelfService.csproj")," file to be ",(0,i.kt)("inlineCode",{parentName:"p"},"net6.0")," instead of ",(0,i.kt)("inlineCode",{parentName:"p"},"net6.0-windows"),". Also, remove the ",(0,i.kt)("inlineCode",{parentName:"p"},"switch(Environment.OSVersion.Platform) { ... }")," statement at the top of ",(0,i.kt)("inlineCode",{parentName:"p"},"Program.cs"),". This will disable the check for the platform."),(0,i.kt)("p",null,"You should remove the reference to the NuGet package ",(0,i.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/Microsoft.Extensions.Hosting.WindowsServices/"},"Microsoft.Extensions.Hosting.WindowsServices"),". You must then also either remove the line with ",(0,i.kt)("inlineCode",{parentName:"p"},"builder.Host.UseWindowsService()")," in ",(0,i.kt)("inlineCode",{parentName:"p"},"Program.cs")," or replace it with an appropriate alternative (e.g. using the ",(0,i.kt)("inlineCode",{parentName:"p"},"UseSystemd()")," extension method from the ",(0,i.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/Microsoft.Extensions.Hosting.Systemd/"},"corresponding Systemd package"),")."),(0,i.kt)("p",null,"Make sure that all other libraries included via NuGet packages are also available for your platform. You will probably get a warning by NuGet or the compiler if they are not, but in case something does not work this might be something to look into."),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"We use the .NET 6 platform extensions for the change password functionality. These extensions are only available on Windows, so you will get a ",(0,i.kt)("inlineCode",{parentName:"p"},"PlattformNotSupportedException")," thrown by Microsoft's library if you try to use this feature on Unix systems."),(0,i.kt)("p",{parentName:"admonition"},"If you want to use this functionality, you need to replace it by another library.")),(0,i.kt)("p",null,"If you then want to create a production build, see ",(0,i.kt)("a",{parentName:"p",href:"/adssp/docs/for-developers/creating-your-own-build"},"Building a production version"),". Of course, you should change the appropriate runtime identifier in the ",(0,i.kt)("inlineCode",{parentName:"p"},"dotnet publish")," command (as opposed to ",(0,i.kt)("inlineCode",{parentName:"p"},"win-x64"),")."))}h.isMDXComponent=!0}}]);