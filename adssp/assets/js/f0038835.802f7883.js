"use strict";(self.webpackChunkadssp=self.webpackChunkadssp||[]).push([[345],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return f}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(r),f=o,m=d["".concat(s,".").concat(f)]||d[f]||p[f]||i;return r?n.createElement(m,a(a({ref:t},u),{},{components:r})):n.createElement(m,a({ref:t},u))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},8702:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return p}});var n=r(7462),o=r(3366),i=(r(7294),r(3905)),a=["components"],l={sidebar_position:1,title:"Getting Started"},s=void 0,c={unversionedId:"for-developers/getting-started",id:"for-developers/getting-started",title:"Getting Started",description:"Requirements",source:"@site/docs/03-for-developers/getting-started.md",sourceDirName:"03-for-developers",slug:"/for-developers/getting-started",permalink:"/adssp/docs/for-developers/getting-started",draft:!1,editUrl:"https://github.com/linova-software/adssp/tree/master/docs/docs/03-for-developers/getting-started.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Getting Started"},sidebar:"docsSidebar",previous:{title:"For Developers",permalink:"/adssp/docs/for-developers/"},next:{title:"Building a production version",permalink:"/adssp/docs/for-developers/creating-your-own-build"}},u={},p=[{value:"Requirements",id:"requirements",level:2},{value:"Coding Style",id:"coding-style",level:2},{value:"Running The Project",id:"running-the-project",level:2},{value:"Further Reading",id:"further-reading",level:2}],d={toc:p};function f(e){var t=e.components,r=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"requirements"},"Requirements"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},".NET 6.0 SDK"),(0,i.kt)("li",{parentName:"ul"},"Node.js 16 (if you want to build the docs as well)")),(0,i.kt)("h2",{id:"coding-style"},"Coding Style"),(0,i.kt)("p",null,"We adhere mostly to the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/dotnet/runtime/blob/v6.0.6/docs/coding-guidelines/coding-style.md"},".NET Runtime Coding Guidelines"),"."),(0,i.kt)("p",null,"Thus, we also supplied an EditorConfig file (",(0,i.kt)("a",{parentName:"p",href:"https://github.com/linova-software/adssp/blob/master/src/.editorconfig"},(0,i.kt)("inlineCode",{parentName:"a"},".editorconfig")),") in the projects root directory, which will help your IDE adhere to the coding style."),(0,i.kt)("p",null,"Also, the compiler will use these information (and additionally the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/linova-software/adssp/blob/master/src/CodeAnalysis.src.globalconfig"},(0,i.kt)("inlineCode",{parentName:"a"},"CodeAnalysis.src.globalconfig")),") to check the coding style when compiling."),(0,i.kt)("h2",{id:"running-the-project"},"Running The Project"),(0,i.kt)("p",null,"Either use your IDE to start the project, or just use ",(0,i.kt)("inlineCode",{parentName:"p"},"dotnet run")," on the command line. You may append ",(0,i.kt)("inlineCode",{parentName:"p"},'--launch-profile "IIS Express"')," or ",(0,i.kt)("inlineCode",{parentName:"p"},"--launch-profile Kestrel")," to run one either a pre-configured IIS Express or Kestrel server instance for testing locally."),(0,i.kt)("p",null,"For local testing with hot-reload capabilities, you can use ",(0,i.kt)("inlineCode",{parentName:"p"},"dotnet watch run -- --launch-profile Kestrel")," instead."),(0,i.kt)("h2",{id:"further-reading"},"Further Reading"),(0,i.kt)("p",null,"For more information, have a look at the official ",(0,i.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/aspnet/core/tutorials/razor-pages/?view=aspnetcore-6.0"},"Microsoft documentation")," for ASP.NET Core 6.0 and Razor Pages."))}f.isMDXComponent=!0}}]);